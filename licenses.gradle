//////////////////////// ADD LICENSE IN AAR //////////////////////////////////

def projName = name
def outputAarDir = file('build/outputs/aar')
def outputAarUnzipedDir = file('build/outputs/aar/unziped')
def aarReleaseFile = file('build/outputs/aar/' + projName + '-release.aar')

task unzipAar(type: Copy, dependsOn: 'bundleReleaseAar') {
    if (project.getName() != "bandyer-android-chat") return
    from zipTree(aarReleaseFile)
    into outputAarUnzipedDir
    doLast { println("unzipAar task completed.") }
}

task generateThirdPartiesLicenses(type: Exec, dependsOn: 'unzipAar') {
    workingDir '../scripts'
    commandLine 'python3', 'generate_third_parties_licenses.py', project.getName()
    doLast { println("generateThirdPartiesLicenses task completed.") }
}

task reZipAar(type: Zip, dependsOn: 'generateThirdPartiesLicenses') {
    from outputAarUnzipedDir
    includeEmptyDirs = false
    include '*'
    include '*/*'
    include '*/*/*'
    archiveFileName.set(projName + "-release.aar")
    destinationDirectory.set(outputAarDir)
    doLast {
        outputAarUnzipedDir.deleteDir()
        println("reZipAar task completed.")
    }
}

afterEvaluate {
//    tasks["generateMetadataFileForReleasePublication"].dependsOn(tasks.getByName("reZipAar"))
    bundleReleaseAar.finalizedBy(reZipAar)
}
