import com.github.jk1.license.render.JsonReportRenderer

/*
 * Copyright 2023 Kaleyra @ https://www.kaleyra.com
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'maven-publish'
    alias(catalog.plugins.dokka)
    alias(catalog.plugins.licenseReport)
}

apply from: '../versions.gradle'
apply from: '../android.gradle'
apply from: '../licenses.gradle'
apply from: '../publish.gradle'
apply from: '../moveIcons.gradle'

android {
    kotlinOptions {
        freeCompilerArgs += [
                "-Xopt-in=kotlin.RequiresOptIn"
        ]
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
            all {
                maxParallelForks = Runtime.runtime.availableProcessors()
                forkEvery = 100
            }
        }
    }
}

dependencies {
    /*** Platform ***/
    implementation catalog.androidxCoreKtx
    implementation catalog.androidxActivity
    implementation "androidx.constraintlayout:constraintlayout-compose:1.0.1"
    coreLibraryDesugaring catalog.desugar

    /*** Testing ***/
    //    testImplementation kaleyra.collaboration
    testImplementation project(":collaboration-suite")
    testImplementation catalog.roboelectric
    testImplementation catalog.junit
    testImplementation("androidx.compose.ui:ui-test-junit4:1.2.1")
    testImplementation "androidx.test.espresso:espresso-intents:3.5.0"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.1'
    testImplementation 'io.mockk:mockk:1.13.3'

    androidTestImplementation catalog.androidxTestRunner
    androidTestImplementation catalog.androidxTestEspressoCore
    androidTestImplementation("androidx.compose.ui:ui-test-junit4:1.2.1")
    androidTestImplementation "io.mockk:mockk-android:1.13.3"
    androidTestImplementation "androidx.test.espresso:espresso-intents:3.4.0"

    debugImplementation("androidx.compose.ui:ui-tooling:1.2.1")
    debugImplementation("androidx.compose.ui:ui-test-manifest:1.2.1")

    implementation("io.coil-kt:coil-compose:2.1.0")

    api project(":collaboration-suite-core-ui")

    /** Kaleyra **/
//    compileOnly kaleyraCatalog.kaleyraCollaborationSuite
//    compileOnly kaleyraCatalog.kaleyraCollaborationSuiteExtensionAudio
    api project(":collaboration-suite")
    api project(":collaboration-suite-extension-audio")
}

licenseReport {
    // Set output directory for the report data.
    // Defaults to ${project.buildDir}/reports/dependency-license.
    outputDir = "$projectDir/build/licenses"

    // Select projects to examine for dependencies.
    // Defaults to current project and all its subprojects
    projects = [project] + project.subprojects

    // Adjust the configurations to fetch dependencies. Default is 'runtimeClasspath'
    // For Android projects use 'releaseRuntimeClasspath' or 'yourFlavorNameReleaseRuntimeClasspath'
    // Use 'ALL' to dynamically resolve all configurations:
    // configurations = ALL
    configurations = ['releaseRuntimeClasspath']

    // Set custom report renderer, implementing ReportRenderer.
    // Yes, you can write your own to support any format necessary.
    renderers = [new JsonReportRenderer('licenses.json', false)]
}

// workaround for mockk spyk(proxy)
// https://mockk.io/doc/md/jdk16-access-exceptions.html
tasks.withType(Test) {
    jvmArgs(
            "--add-opens", "java.base/java.time=ALL-UNNAMED",
            "--add-opens", "java.base/java.lang.reflect=ALL-UNNAMED"
    )
}
